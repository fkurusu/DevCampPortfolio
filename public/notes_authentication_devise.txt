PivotalTracker

- Authentication
  - Implement the devise gem
  - Customize the routes
  - Customize the attributes
  - Integrate virtual attributes

$ git checkout -b authentication

Add devise gem to Gemfile
gem 'devise'. '~> 4.2'

$ bundle install

$ rails g devise:install

In the development.rb file under config/environments add at the end of the file:

config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }

Defined root_url to routes
  root to: 'home#index'
  
Add flash messages to application.html.erb

<p class="notice"><%= notice %></p>
<p class="alert"><%= alert %></p>

$ rails g devise:views

$ rails g devise User

Add :name field to User (DeviseCreateUsers)

$ rails db:migrate

Routes file
devise_for :users, path: '', path_names: { sign_in: 'login', sign_out: 'logout', sign_up: 'register' }

To use strong parameter with devise do this:

(Devise whitelist)

application_controller.rb

before_action :configure_permitted_parameters, if: :devise_controller?
  
  def configure_permitted_parameters
    devise_parameter_sanitizer.permit(:sign_up, keys: [:name])
    devise_parameter_sanitizer.permit(:account_update, keys: [:name])
  end

Single Responsability Role. A class should a single responsability

Extract all the devise whitelist parameters and put them in their own module

under controllers/concerns/devise_whitelist.rb

module DeviseWhitelist
  extend ActiveSupport::Concern
  
  included do
    before_action :configure_permitted_parameters, if: :devise_controller?
  end
  
  def configure_permitted_parameters
    devise_parameter_sanitizer.permit(:sign_up, keys: [:name])
    devise_parameter_sanitizer.permit(:account_update, keys: [:name])
  end
end

In the application controller add:
  include devise_whitelist
  
  

-------------------- 
VIRTUAL Attributes.

An attibute thet is not a column name

 












