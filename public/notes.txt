git
remove cached files
$git rm . -r --cached

gpg
rvm
  rvm list
  rvm install 2.4.0
  rvm unistall 2.2.4
  rvm 2.4.0 use --default
  rvm gemset list
  rvm genset use global
update gem
  gem update --system
  gem update
  gem install bundler (ruby gem that allows you to package up all the various code libraries)
  gem install nokogiri (communicate with outside services, being able to parse them, etc.)
  gem install rails
  
  
Postgresql must be already installed
To startup the Postgres database
  $ sudo service postgresql start
  
To generate a new RAILS app
$ rails new <name> -T --database=postgresql
$ rails db:create 

********************
fkurusu:~/workspace/BlogApp (master) $ psql
psql (9.3.18, server 9.3.19)
Type "help" for help.

ubuntu=# UPDATE pg_database SET datistemplate = FALSE WHERE datname = 'template1';
UPDATE 1
ubuntu=# DROP DATABASE template1;
DROP DATABASE
ubuntu=# CREATE DATABASE template1 WITH TEMPLATE = template0 ENCODING = 'UNICODE';
CREATE DATABASE
ubuntu=# UPDATE pg_database SET datistemplate = TRUE WHERE datname = 'template1';
UPDATE 1
ubuntu=# \c template1
psql (9.3.18, server 9.3.19)
You are now connected to database "template1" as user "ubuntu".
template1=# VACUUM FREEZE;
VACUUM
template1=# exit
template1-# \q
fkurusu:~/workspace/BlogApp (master) $ rails db:create
Created database 'BlogApp_development'
Created database 'BlogApp_test'
********************

To start rails server in cloud9
$ rails s -b $IP -p $PORT


-----------------------

Scaffold
$ rails g scaffold Blog title:string body:text

$ rails db:migrate

------------

CONTROLLER GENERATOR
$ git checkout -b controller-generator
$ rails g controller Pages home about contact
create pull request and merge in github
then 
$ git pull in the master branch

MODEL GENERATOR

$ git checkout -b model-generator
$ rails g model Skill title:string percent_utilized:integer

$ rails db:migrate

RESOURCE GENERATOR

$ git checkout -b resource-generator

$ rails g resource Portfolio title:string subtitle:string body:text main_image:text thumb_image:text
$ rails db:migrate


-------------------------

#SEEDS file

After seeding run this:

$ rails db:setup

--------------------

Generate portfolio actions controller by hand

----------------------

Firndly routes

gem 'friedly_id'

$ rails generate friendly_id
$ rails db:migrate

Add the slug ttribute to the table we want
slug:string:uniq

$ rails g migration add_slug_to_blogs slug:string:uniq

$ rails db:migrate

Into the blogs model include this:
  extend FriendlyId
  friendly_id [attribute_name], use: :slugged

In teh controller
@blog = Blog.friendly.find(params[:id])

Blog.find_each(&:save)

------------------------------

ENUMS

$ rails g migration add_status_to_blogs status:integer

Migration file add the default
add_column :blogs, :status, :integer, default: 0

$ rails c
  > Blog.last.published! Updates the last blog with published
  > Blog.published  Selects all blogs with pusblished value
  
  > Blog.last.draft?
  > Blog.last.published?

************************
Table relationships 

git checkout -b data-feature

In the models:

validates_presence_of :[value]

$ rails g model Topic title:string
$ rails db:migrate

Add 1:M relatioship

$ rails g migration add_topic_reference_to_blogs topic:references
$ rails db:migrate


--------
Custom scopes:
It's a custom db query